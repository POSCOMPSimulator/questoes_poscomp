{
  "Ano": "2016",
  "Numero": "22",
  "Enunciado": ["O tempo de execução T(n) de um algoritmo, em que n é o tamanho da entrada, é dado pela equação de recorrência T(n) = 8T(n/2)+q*n se n > 1. Dado que T(1) = p, e que p e q são constantes arbitrárias, a complexidade do algoritmo é:"],
  "Alternativas": ["O(n).", "O(n log n).", "O($$n^{2}$$).", "O($$n^{3}$$).", "O($$n^{n}$$)."],
  "Imagens": [],
  "Resposta": 3,
  "Componente": "Fundamentos da Computação",
  "Subarea": "Análise de Algoritmos",
  "Explicacao": "Para determinar a complexidade do algoritmo, podemos usar o teorema mestre para resolver a equação de recorrência $$T(n) = 8T(n/2) + qn$$. Comparando com a forma geral $$T(n) = aT(n/b) + f(n)$$, temos $$a = 8$$, $$b = 2$$, e $$f(n) = qn$$. Calculamos $$log_b(a) = log_2(8) = 3$$. Como $$f(n) = qn$$ é $$O(n^{c})$$ com $$c = 1$$, e $$c < log_b(a)$$, pelo caso 1 do teorema mestre, a complexidade é $$T(n) = O(n^{log_b(a)}) = O(n^3)$$."
}
